const nodemailer = require('nodemailer');

// Email configuration
const createEmailTransporter = () => {
  return nodemailer.createTransporter({
    service: 'gmail', // You can use other services like 'outlook', 'yahoo', etc.
    auth: {
      user: process.env.EMAIL_USER, // Your email address
      pass: process.env.EMAIL_APP_PASSWORD // App password (not regular password)
    }
  });
};

// Send email alert function
const sendEmailAlert = async (url, status, details = {}) => {
  try {
    const transporter = createEmailTransporter();
    
    const isDown = status === 'DOWN';
    const subject = `ðŸš¨ Alert: ${url} is ${status}`;
    
    const htmlContent = `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <div style="background: ${isDown ? '#fee2e2' : '#d1fae5'}; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
          <h2 style="color: ${isDown ? '#dc2626' : '#059669'}; margin: 0;">
            ${isDown ? 'ðŸš¨' : 'âœ…'} URL Health Alert
          </h2>
        </div>
        
        <div style="background: #f9fafb; padding: 20px; border-radius: 8px;">
          <h3>URL Status Report</h3>
          <p><strong>URL:</strong> ${url}</p>
          <p><strong>Status:</strong> <span style="color: ${isDown ? '#dc2626' : '#059669'};">${status}</span></p>
          <p><strong>Time:</strong> ${new Date().toLocaleString()}</p>
          
          ${details.error ? `<p><strong>Error:</strong> ${details.error}</p>` : ''}
          ${details.responseTime ? `<p><strong>Response Time:</strong> ${details.responseTime}ms</p>` : ''}
          ${details.httpStatus ? `<p><strong>HTTP Status:</strong> ${details.httpStatus}</p>` : ''}
          ${details.consecutiveFailures ? `<p><strong>Consecutive Failures:</strong> ${details.consecutiveFailures}</p>` : ''}
        </div>
        
        <div style="margin-top: 20px; padding: 15px; background: #f3f4f6; border-radius: 8px;">
          <p style="margin: 0; color: #6b7280; font-size: 14px;">
            This alert was generated by URL Health Checker. 
            Check your dashboard for more details.
          </p>
        </div>
      </div>
    `;

    const mailOptions = {
      from: process.env.EMAIL_USER,
      to: process.env.ALERT_EMAIL || process.env.EMAIL_USER, // Who receives alerts
      subject: subject,
      html: htmlContent
    };

    await transporter.sendMail(mailOptions);
    console.log(`ðŸ“§ Alert email sent for ${url} - Status: ${status}`);
    
  } catch (error) {
    console.error('Failed to send email alert:', error);
  }
};

module.exports = { sendEmailAlert };

